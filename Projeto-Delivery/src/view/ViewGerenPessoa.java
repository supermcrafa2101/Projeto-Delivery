/*
    @author Rafael Teixeira 
 */
package view;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import model.bean.Pessoa;
import model.dao.PessoaDAO;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.bean.ValidaCPF;

public class ViewGerenPessoa extends javax.swing.JFrame {

    public ViewGerenPessoa() {
        initComponents();

        DefaultTableModel modelo = (DefaultTableModel) tbRegistros.getModel();
        tbRegistros.setRowSorter(new TableRowSorter(modelo));

        readJTable();

    }

    public void readJTable() {

        DefaultTableModel modelo = (DefaultTableModel) tbRegistros.getModel();
        modelo.setNumRows(0);
        PessoaDAO usudao = new PessoaDAO();

        usudao.read().forEach((objPessoa) -> {
            modelo.addRow(new Object[]{
                objPessoa.getNome(),
                objPessoa.getCPF(),
                objPessoa.getEndereco(),
                objPessoa.getTelefone()});
        });
    }

    public void readJTableCPF(String CPF) {

        DefaultTableModel modelo = (DefaultTableModel) tbRegistros.getModel();
        modelo.setNumRows(0);
        PessoaDAO usudao = new PessoaDAO();

        usudao.readCPF(CPF).forEach((objPessoa) -> {
            modelo.addRow(new Object[]{
                objPessoa.getNome(),
                objPessoa.getCPF(),
                objPessoa.getEndereco(),
                objPessoa.getTelefone()});
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelCampos = new javax.swing.JPanel();
        lblNome = new javax.swing.JLabel();
        lblCPF = new javax.swing.JLabel();
        lblEndereco = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        txtEndereco = new javax.swing.JTextField();
        txtCPF = new javax.swing.JFormattedTextField();
        txtTelefone = new javax.swing.JFormattedTextField();
        lblTelefone = new javax.swing.JLabel();
        lblValidacaoCPF = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        panelBotoes = new javax.swing.JPanel();
        btnRemoverClienteCadastro = new javax.swing.JButton();
        btnSairCadastro = new javax.swing.JButton();
        btnAtualizarCadastro = new javax.swing.JButton();
        btnAdicionarClienteCadastro = new javax.swing.JButton();
        btnVoltarCadastro = new javax.swing.JButton();
        lblPesquisarCPF = new javax.swing.JLabel();
        txtPesquisaCPF = new javax.swing.JFormattedTextField();
        btnPesquisarCPF = new javax.swing.JButton();
        btnLimparPesquisa = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbRegistros = new javax.swing.JTable();
        btnLimparCampos = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Delivery");

        panelCampos.setBorder(javax.swing.BorderFactory.createTitledBorder("Gerenciar Clientes"));

        lblNome.setText("Nome");

        lblCPF.setText("CPF");

        lblEndereco.setText("Endere√ßo");

        txtNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeActionPerformed(evt);
            }
        });

        txtEndereco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEnderecoActionPerformed(evt);
            }
        });

        try {
            txtCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCPFActionPerformed(evt);
            }
        });

        try {
            txtTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##) ####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtTelefone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelefoneActionPerformed(evt);
            }
        });

        lblTelefone.setText("Telefone");

        jButton1.setText("Verificar CPF");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelCamposLayout = new javax.swing.GroupLayout(panelCampos);
        panelCampos.setLayout(panelCamposLayout);
        panelCamposLayout.setHorizontalGroup(
            panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCamposLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelCamposLayout.createSequentialGroup()
                        .addComponent(lblNome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(panelCamposLayout.createSequentialGroup()
                        .addComponent(lblCPF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(panelCamposLayout.createSequentialGroup()
                        .addComponent(lblTelefone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(20, 20, 20))
                    .addGroup(panelCamposLayout.createSequentialGroup()
                        .addComponent(lblEndereco, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                        .addGap(23, 23, 23)))
                .addGroup(panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTelefone)
                    .addComponent(txtEndereco)
                    .addGroup(panelCamposLayout.createSequentialGroup()
                        .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblValidacaoCPF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(txtNome, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );
        panelCamposLayout.setVerticalGroup(
            panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCamposLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNome)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblCPF)
                        .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1))
                    .addComponent(lblValidacaoCPF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEndereco)
                    .addComponent(txtEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(panelCamposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTelefone)
                    .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(85, 85, 85))
        );

        btnRemoverClienteCadastro.setText("Remover Cliente");
        btnRemoverClienteCadastro.setEnabled(false);
        btnRemoverClienteCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverClienteCadastroActionPerformed(evt);
            }
        });

        btnSairCadastro.setText("Sair");
        btnSairCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairCadastroActionPerformed(evt);
            }
        });

        btnAtualizarCadastro.setText("Atualizar");
        btnAtualizarCadastro.setEnabled(false);
        btnAtualizarCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarCadastroActionPerformed(evt);
            }
        });

        btnAdicionarClienteCadastro.setText("Adicionar Cliente");
        btnAdicionarClienteCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarClienteCadastroActionPerformed(evt);
            }
        });

        btnVoltarCadastro.setText("Voltar");
        btnVoltarCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarCadastroActionPerformed(evt);
            }
        });

        lblPesquisarCPF.setText("Procurar por CPF :");

        try {
            txtPesquisaCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtPesquisaCPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPesquisaCPFActionPerformed(evt);
            }
        });

        btnPesquisarCPF.setText("Procurar");
        btnPesquisarCPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarCPFActionPerformed(evt);
            }
        });

        btnLimparPesquisa.setText("Limpar Pesquisa");
        btnLimparPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparPesquisaActionPerformed(evt);
            }
        });

        tbRegistros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "CPF", "Endereco", "Telefone"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbRegistros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbRegistrosMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tbRegistrosMouseReleased(evt);
            }
        });
        tbRegistros.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tbRegistrosKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tbRegistros);

        javax.swing.GroupLayout panelBotoesLayout = new javax.swing.GroupLayout(panelBotoes);
        panelBotoes.setLayout(panelBotoesLayout);
        panelBotoesLayout.setHorizontalGroup(
            panelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBotoesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblPesquisarCPF)
                .addGap(18, 18, 18)
                .addComponent(txtPesquisaCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnPesquisarCPF)
                .addGap(18, 18, 18)
                .addComponent(btnLimparPesquisa)
                .addGap(120, 120, 120))
            .addGroup(panelBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBotoesLayout.createSequentialGroup()
                        .addComponent(btnAtualizarCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnAdicionarClienteCadastro)
                        .addGap(18, 18, 18)
                        .addComponent(btnRemoverClienteCadastro)
                        .addGap(18, 18, 18)
                        .addComponent(btnVoltarCadastro, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSairCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        panelBotoesLayout.setVerticalGroup(
            panelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBotoesLayout.createSequentialGroup()
                .addGroup(panelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAtualizarCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdicionarClienteCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRemoverClienteCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSairCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVoltarCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPesquisarCPF)
                    .addComponent(txtPesquisaCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisarCPF)
                    .addComponent(btnLimparPesquisa))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE))
        );

        btnLimparCampos.setText("Limpar");
        btnLimparCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparCamposActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelCampos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLimparCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panelBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLimparCampos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(panelBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAdicionarClienteCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarClienteCadastroActionPerformed
        //Cadastra uma pessoa no banco de dados 'Delivery' na table 'pessoa',
        //  com os valores inseridos nos textFields ao clicar no botao Cadastrar. 
        Pessoa objPessoa = new Pessoa();
        PessoaDAO dao = new PessoaDAO();
        String CPF = (txtCPF.getText().replace(".", ""));
        CPF = (CPF.replace("-", ""));

        if (txtNome.getText().equals("")
                || txtCPF.getText().equals("")
                || txtEndereco.getText().equals("")
                || txtTelefone.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Todos os campos devem ser preenchidos!");
        } else if (ValidaCPF.isCPF(CPF) == false) {
            JOptionPane.showMessageDialog(null, "CPF Invalido!");
        } else {

            objPessoa.setNome(txtNome.getText());
            objPessoa.setCPF(txtCPF.getText());
            objPessoa.setEndereco(txtEndereco.getText());
            objPessoa.setTelefone(txtTelefone.getText());

            // Cria o objeto 'objPessoa' da classe 'Pessoa' com
            // os atributos inseridos nos campos de cadastro
            dao.create(objPessoa);

            readJTable();

            txtNome.setText("");
            txtCPF.setText("");
            txtEndereco.setText("");
            txtTelefone.setText("");
            lblValidacaoCPF.setText("");
            btnAdicionarClienteCadastro.setEnabled(true);
            btnAtualizarCadastro.setEnabled(false);
            btnRemoverClienteCadastro.setEnabled(false);
        }

    }//GEN-LAST:event_btnAdicionarClienteCadastroActionPerformed

    private void btnSairCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairCadastroActionPerformed
        // Ao pressioanr o btnSair o programa sera encerrado sem erros.
        System.exit(0);
    }//GEN-LAST:event_btnSairCadastroActionPerformed


    private void btnLimparCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparCamposActionPerformed
        //Ao pressionar o btnLimpar todos os textFIeld ser√£o limpados.
        txtNome.setText("");
        txtCPF.setText("");
        txtEndereco.setText("");
        txtTelefone.setText("");
        lblValidacaoCPF.setText("");
        tbRegistros.clearSelection();
        btnAdicionarClienteCadastro.setEnabled(true);
        btnAtualizarCadastro.setEnabled(false);
        btnRemoverClienteCadastro.setEnabled(false);
    }//GEN-LAST:event_btnLimparCamposActionPerformed

    private void txtCPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCPFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCPFActionPerformed

    private void txtNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeActionPerformed

    private void txtEnderecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEnderecoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEnderecoActionPerformed

    private void txtTelefoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelefoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefoneActionPerformed

    private void btnAtualizarCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarCadastroActionPerformed
        if ((tbRegistros.getSelectedRow()) != -1) {
            Pessoa objPessoa = new Pessoa();
            PessoaDAO dao = new PessoaDAO();

            String CPF = (txtCPF.getText().replace(".", ""));
            CPF = (CPF.replace("-", ""));

            if (txtNome.getText().equals("")
                    || txtCPF.getText().equals("")
                    || txtEndereco.getText().equals("")
                    || txtTelefone.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Todos os campos devem ser preenchidos!");
            } else if (ValidaCPF.isCPF(CPF) == false) {
                JOptionPane.showMessageDialog(null, "CPF Invalido!");
            } else {
                // Pegando os valores da GUI
                objPessoa.setNome(txtNome.getText());
                objPessoa.setCPF(txtCPF.getText());
                objPessoa.setEndereco(txtEndereco.getText());
                objPessoa.setTelefone(txtTelefone.getText());
//                objPessoa.setID((int) tbRegistros.getValueAt(tbRegistros.getSelectedRow(), 0));

                dao.update(objPessoa);

                readJTable();

                btnAdicionarClienteCadastro.setEnabled(true);
                btnAtualizarCadastro.setEnabled(false);
                btnRemoverClienteCadastro.setEnabled(false);
                txtNome.setText("");
                txtCPF.setText("");
                txtEndereco.setText("");
                txtTelefone.setText("");
                tbRegistros.clearSelection();

            }
        } else {
            JOptionPane.showMessageDialog(null,
                    "Selecione uma pessoa para atualizar!");
        }


    }//GEN-LAST:event_btnAtualizarCadastroActionPerformed

    private void btnVoltarCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarCadastroActionPerformed
        this.dispose();
        ViewPaginaInicial inicio = new ViewPaginaInicial();
        inicio.setVisible(true);
    }//GEN-LAST:event_btnVoltarCadastroActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String cpfteste = txtCPF.getText();
        cpfteste = cpfteste.replace("-", "");
        cpfteste = cpfteste.replace(".", "");
        System.out.println(cpfteste);
        if (ValidaCPF.isCPF(cpfteste) == true) {
            lblValidacaoCPF.setText("CPF Valido");
        } else {
            lblValidacaoCPF.setText("CPF Invalido");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnRemoverClienteCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverClienteCadastroActionPerformed
        // Remove a pessoa indicada ao pressionar o botao Remover Pessoa.
        if (tbRegistros.getSelectedRow() != -1) {
            // Criando uma modifica√ß√£o para o MessageDIalog de aviso
            JFrame frame = new JFrame();
            String[] opcoesSMD = new String[2];
            opcoesSMD[0] = new String("Sim");
            opcoesSMD[1] = new String("N√£o");
            // Exibe o aviso e captura a resposta na variavel 'escolha'
            int escolha = JOptionPane.showOptionDialog(
                frame.getContentPane(),
                "A pessoa selecionada sera removido!!!",
                "AVISO",
                0,
                JOptionPane.WARNING_MESSAGE,
                null,
                opcoesSMD,
                null);

            if (escolha == JOptionPane.YES_OPTION) {

                Pessoa objPessoa = new Pessoa();
                PessoaDAO dao = new PessoaDAO();

                objPessoa.setCPF((String) tbRegistros.getValueAt(tbRegistros.getSelectedRow(), 1));

                dao.delete(objPessoa);
                readJTable();

                btnAdicionarClienteCadastro.setEnabled(true);
                btnAtualizarCadastro.setEnabled(false);
                btnRemoverClienteCadastro.setEnabled(false);
                txtNome.setText("");
                txtCPF.setText("");
                txtEndereco.setText("");
                txtTelefone.setText("");
                tbRegistros.clearSelection();

            } else if (escolha == JOptionPane.NO_OPTION) {
                JOptionPane.showMessageDialog(null, "Nada foi alterado.");
            }
        } else {
            JOptionPane.showMessageDialog(null,
                "Selecione uma pessoa para remover");
        }
    }//GEN-LAST:event_btnRemoverClienteCadastroActionPerformed

    private void tbRegistrosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbRegistrosKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tbRegistrosKeyReleased

    private void tbRegistrosMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbRegistrosMouseReleased

        // Verifica se alguma linha foi selecionada
        if ((tbRegistros.getSelectedRow()) != -1) {
            btnAtualizarCadastro.setEnabled(true);
            btnRemoverClienteCadastro.setEnabled(true);
            btnAdicionarClienteCadastro.setEnabled(false);

            txtNome.setText(
                tbRegistros.getValueAt(tbRegistros.getSelectedRow(), 0).toString());
            txtCPF.setText(
                tbRegistros.getValueAt(tbRegistros.getSelectedRow(), 1).toString());
            txtEndereco.setText(
                tbRegistros.getValueAt(tbRegistros.getSelectedRow(), 2).toString());
            txtTelefone.setText(
                tbRegistros.getValueAt(tbRegistros.getSelectedRow(), 3).toString());

        }
    }//GEN-LAST:event_tbRegistrosMouseReleased

    private void tbRegistrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbRegistrosMouseClicked

    }//GEN-LAST:event_tbRegistrosMouseClicked

    private void btnLimparPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparPesquisaActionPerformed
        btnAdicionarClienteCadastro.setEnabled(true);
        btnAtualizarCadastro.setEnabled(false);
        btnRemoverClienteCadastro.setEnabled(false);
        txtNome.setText("");
        txtCPF.setText("");
        txtEndereco.setText("");
        txtTelefone.setText("");
        txtPesquisaCPF.setText("");
        readJTable();
    }//GEN-LAST:event_btnLimparPesquisaActionPerformed

    private void btnPesquisarCPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarCPFActionPerformed
        readJTableCPF(txtPesquisaCPF.getText());
        System.out.println(txtPesquisaCPF.getText());
    }//GEN-LAST:event_btnPesquisarCPFActionPerformed

    private void txtPesquisaCPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPesquisaCPFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPesquisaCPFActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewGerenPessoa.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewGerenPessoa.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewGerenPessoa.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewGerenPessoa.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewGerenPessoa().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionarClienteCadastro;
    private javax.swing.JButton btnAtualizarCadastro;
    private javax.swing.JButton btnLimparCampos;
    private javax.swing.JButton btnLimparPesquisa;
    private javax.swing.JButton btnPesquisarCPF;
    private javax.swing.JButton btnRemoverClienteCadastro;
    private javax.swing.JButton btnSairCadastro;
    private javax.swing.JButton btnVoltarCadastro;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCPF;
    private javax.swing.JLabel lblEndereco;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblPesquisarCPF;
    private javax.swing.JLabel lblTelefone;
    private javax.swing.JLabel lblValidacaoCPF;
    private javax.swing.JPanel panelBotoes;
    private javax.swing.JPanel panelCampos;
    private javax.swing.JTable tbRegistros;
    private javax.swing.JFormattedTextField txtCPF;
    private javax.swing.JTextField txtEndereco;
    private javax.swing.JTextField txtNome;
    private javax.swing.JFormattedTextField txtPesquisaCPF;
    private javax.swing.JFormattedTextField txtTelefone;
    // End of variables declaration//GEN-END:variables
        //</editor-fold>
}
